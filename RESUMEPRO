import os # –î–æ–±–∞–≤–∏–º –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —ç–∫—Ä–∞–Ω–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
from rich.console import Console
from rich.panel import Panel
from rich.prompt import Prompt # –î–ª—è –∫—Ä–∞—Å–∏–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–≤–æ–¥–∞
from rich.text import Text
from rich.theme import Theme # –î–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å—Ç–∏–ª–µ–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Rich ---
# –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é —Ç–µ–º—É –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
custom_theme = Theme({
    "info": "dim cyan",
    "warning": "magenta",
    "danger": "bold red",
    "success": "bold green",
    "prompt_style": "bold yellow",
    "header": "bold blue on white", # –ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    "section": "bold magenta",
    "contact": "bold cyan",
    "filename": "underline green",
})
console = Console(theme=custom_theme)

# --- –§—É–Ω–∫—Ü–∏–∏ ---

def clear_screen():
    """–û—á–∏—â–∞–µ—Ç —ç–∫—Ä–∞–Ω –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–∏–¥–∞."""
    # –î–ª—è Windows 'cls', –¥–ª—è Unix-–ø–æ–¥–æ–±–Ω—ã—Ö (Linux, macOS) 'clear'
    os.system('cls' if os.name == 'nt' else 'clear')

def get_user_data():
    """–°–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Rich."""
    clear_screen()
    console.print(Panel.fit("[bold cyan]‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ResumePro! ‚ú®[/bold cyan]", title="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", border_style="info"))
    console.print("\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:")

    name = Prompt.ask("[prompt_style]üìù –ò–º—è[/prompt_style]")
    profession = Prompt.ask("[prompt_style]üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏—è[/prompt_style]")

    console.print("\n[prompt_style]üìà –û–ø–∏—à–∏—Ç–µ –≤–∞—à –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (–≤–≤–µ–¥–∏—Ç–µ 'END' –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è):[/prompt_style]")
    experience_lines = []
    while True:
        line = input()
        if line.strip().upper() == 'END':
            break
        experience_lines.append(line)
    experience = "\n".join(experience_lines)

    skills = Prompt.ask("[prompt_style]üõ†Ô∏è –ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)[/prompt_style]")
    education = Prompt.ask("[prompt_style]üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ[/prompt_style]")
    contact = Prompt.ask("[prompt_style]üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ç–µ–ª–µ—Ñ–æ–Ω, email)[/prompt_style]")

    return {
        "–ò–º—è": name,
        "–ü—Ä–æ—Ñ–µ—Å—Å–∏—è": profession,
        "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã": experience,
        "–ù–∞–≤—ã–∫–∏": skills,
        "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ": education,
        "–ö–æ–Ω—Ç–∞–∫—Ç—ã": contact
    }

def generate_resume(data):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è –¥–∞–Ω–Ω—ã—Ö."""
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º f-string, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ, –Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∏–ª–∏ rich Text, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    resume = f"""
[header] –†–ï–ó–Æ–ú–ï [/header]

===========================

[section]–ò–º—è:[/section] {data['–ò–º—è']}
[section]–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:[/section] {data['–ü—Ä–æ—Ñ–µ—Å—Å–∏—è']}

[section]–û–ü–´–¢ –†–ê–ë–û–¢–´:[/section]
{data['–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã']}

[section]–ù–ê–í–´–ö–ò:[/section]
{data['–ù–∞–≤—ã–∫–∏']}

[section]–û–ë–†–ê–ó–û–í–ê–ù–ò–ï:[/section]
{data['–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ']}

[section]–ö–û–ù–¢–ê–ö–¢–´:[/section]
[contact]{data['–ö–æ–Ω—Ç–∞–∫—Ç—ã']}[/contact]

===========================
"""
    return resume

def save_resume(text, filename="resume.txt"):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ –≤ —Ñ–∞–π–ª –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ Rich."""
    try:
        with open(filename, "w", encoding="utf-8") as file:
            # Rich —Å—Ç–∏–ª–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç
            # –î–ª—è —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–µ–º Text –æ–±—ä–µ–∫—Ç –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ plain –≤–µ—Ä—Å–∏—é
            plain_text = Text.from_markup(text).plain
            file.write(plain_text.strip()) # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã/–ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ
        console.print(Panel(f"[success]‚úÖ –†–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–∞–π–ª:[/success] [filename]{filename}[/filename]",
                          title="–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ", border_style="success", expand=False))
    except IOError as e:
        console.print(Panel(f"[danger]‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {filename}:[/danger] {e}",
                          title="–û—à–∏–±–∫–∞", border_style="danger"))

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    user_data = get_user_data()
    resume_text_markup = generate_resume(user_data) # –¢–µ–∫—Å—Ç —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π Rich

    clear_screen()
    console.print(Panel(resume_text_markup, title="üìÑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –†–µ–∑—é–º–µ", border_style="blue", padding=(1, 2)))

    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    if Prompt.ask("\n[prompt_style]üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç–æ —Ä–µ–∑—é–º–µ?[/prompt_style]", choices=["–¥–∞", "–Ω–µ—Ç"], default="–¥–∞") == "–¥–∞":
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        default_filename = f"resume_{user_data['–ò–º—è'].replace(' ', '_')}.txt"
        filename = Prompt.ask(f"[prompt_style]–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è[/prompt_style]", default=default_filename)
        save_resume(resume_text_markup, filename) # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—Å—Ç —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π
    else:
        console.print("[warning]‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.[/warning]")

    console.print("\n[info]–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ResumePro![/info]")

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
if __name__ == "__main__":
    main()